{"mappings":"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","sources":["js/main.js"],"sourcesContent":["const CSVToArray = (data, delimiter = ',', omitFirstRow = false) =>\n  data\n    .slice(omitFirstRow ? data.indexOf('\\n') + 1 : 0)\n    .split('\\n')\n    .map(v => v.split(delimiter));\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} a items An array containing the items.\n */\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nclass Site {\n  constructor(name, min, max, ideal) {\n    this.name = name.trim();\n    this.min = min;\n    this.max = max;\n    this.ideal = ideal;\n    this.students = [];\n  }\n\n  add_student(student) {\n    this.students.push(student);\n  }\n\n  is_full() {\n    return this.students.length >= this.max;\n  }\n\n  is_at_less_than_ideal() {\n    return this.students.length < this.ideal;\n  }\n\n  list_students_with_ranking() {\n    const list = []\n    this.students.forEach((student) => {\n      list.push([student.username, student.ranking_for_site(this.name)])\n    })\n    return list\n  }\n\n}\n\n\nclass Student {\n\n  constructor(username, firstName, lastName, sites, siteRating) {\n    this.username = username\n    this.firstName = firstName\n    this.lastName = lastName\n    this.siteRating = this.getSiteRatings(sites, siteRating)\n  }\n\n  getSiteRatings(sites, siteRatings) {\n    const siteMatch = []\n    for (let i = 0; i < sites.length; i++) {\n      const site = sites[i]\n      let rating = parseInt(siteRatings[i])\n      if (isNaN(rating)) {\n        rating = 999\n      }\n      siteMatch.push([site, rating])\n    }\n\n    return siteMatch.sort((a,b) => {return a[1] - b[1]})\n  }\n\n  ranking_for_site(findSite) {\n    console.log(this.siteRating, findSite)\n    for (let i = 0; i < this.siteRating.length; i++) {\n      const siteRating = this.siteRating[i]\n      const site = siteRating[0]\n      const ranking = siteRating[1]\n      if (site === findSite) {\n        return ranking\n      }\n    }\n    return \"-1\"\n  }\n}\n\n\nclass StudentMatcher {\n  constructor(studentData, siteData) {\n    this.studentList = studentData\n    this.siteList = siteData\n    this.siteNameToSite = {}\n    this.siteList.forEach((site) => {\n      this.siteNameToSite[site.name] = site\n    })\n    this.details = {'random': 0}\n  }\n\n  match() {\n    shuffle(this.studentList)\n    const studentsNotMatched = []\n    for (let i = 0; i < this.studentList.length; i++) {\n      const student = this.studentList[i]\n      const sitePicks = student.siteRating\n      let addedToSite = false\n\n      for (let j = 0; j < sitePicks.length; j++) {\n        const pick = sitePicks[j]\n        const siteName = pick[0]\n        const ranking = pick[1]\n\n        const site = this.siteNameToSite[siteName]\n        if (!site.is_full()) {\n          site.add_student(student)\n          addedToSite = true\n          break\n        }\n      }\n\n      if (!addedToSite) {\n        studentsNotMatched.push(student)\n      }\n    }\n\n    for (let i = 0; i < studentsNotMatched.length; i++) {\n      for (let j = 0; j < this.siteList.length; j++) {\n        const student = studentsNotMatched[i]\n        const site = this.siteList[j]\n        if (!site.is_full()) {\n          site.add_student(student)\n          break\n        }\n      }\n    }\n\n    this.getSummary()\n  }\n\n  getSummary() {\n    let numOfStudentsMatched = 0\n    this.details = {'random': 0}\n    console.log(this)\n    this.siteList.forEach((site) => {\n      site.list_students_with_ranking().forEach((studentsWithRanking) => {\n        const student = studentsWithRanking[0]\n        let ranking = studentsWithRanking[1]\n        console.log(ranking)\n\n        numOfStudentsMatched += 1\n        if (ranking === '-1') {\n          ranking = \"random\"\n        }\n\n        if (ranking in this.details) {\n          this.details[ranking] += 1\n        } else {\n          this.details[ranking] = 1\n        }\n      })\n    })\n\n    let summary = \"\"\n    const keys = []\n    for (let key in this.details) {\n      if (key !== \"random\") {\n        keys.push(parseInt(key))\n      }\n    }\n    keys.sort((a, b) => {\n      return a - b\n    })\n    keys.forEach((val) => {\n      summary += `% of Students with Ranking ${val}: ${(this.details[val] / this.studentList.length * 100).toFixed(2)} %\\n`\n    })\n    summary += `% of Students with Random Pick: ${(this.details[\"random\"] / this.studentList.length * 100).toFixed(2)} %\\n`\n    summary += `Total students matched: ${numOfStudentsMatched}\\n`\n\n    let numOfSitesNotAtMin = 0\n    this.siteList.forEach((site) => {\n      if (site.students.length < site.min) {\n        numOfSitesNotAtMin += 1\n      }\n    })\n    summary += `Number of Sites with less than min: ${numOfSitesNotAtMin}\\n`\n\n    let numOfSitesNotAtIdeal = 0\n    this.siteList.forEach((site) => {\n      if (site.students.length !== site.ideal) {\n        numOfSitesNotAtIdeal += 1\n      }\n    })\n    summary += `Number of Sites not at ideal: ${numOfSitesNotAtIdeal}\\n`\n    return summary\n  }\n\n  getTopFive() {\n    let total = 0\n    for (let i = 1; i < 6; i++) {\n      total += this.details[i]\n    }\n\n    this.siteList.forEach((site) => {\n      if (site.students.length < site.min) {\n        total = 0\n      }\n    })\n    return total\n  }\n\n  getDownloadRowsStudents() {\n    const rows = [\n      [\"Student\", 'Site', \"Student Ranking\"]\n    ];\n\n    this.siteList.forEach((site) => {\n      site.list_students_with_ranking().forEach((studentWithRanking) => {\n        const student = studentWithRanking[0]\n        const ranking = studentWithRanking[1]\n        rows.push([student, site.name, ranking + \"\"])\n      })\n    })\n    return rows\n  }\n\n  getDownloadRowsSites() {\n    const rows = [\n      [\"Site\", \"Number of Students\", \"Min\", \"Max\", \"Ideal\"]\n    ];\n\n    this.siteList.forEach((site) => {\n      rows.push([site.name, site.students.length, site.min, site.max, site.ideal])\n    })\n\n    return rows\n  }\n}\n\nclass Program {\n  constructor() {\n    this.rawStudentData = null\n    this.rawSiteData = null\n  }\n\n\n  parseStudentData() {\n    let studentRow = []\n    const studentList = []\n\n    for (let i = 0; i < this.rawStudentData.length; i++) {\n      const row = this.rawStudentData[i]\n      if (i === 0) {\n        studentRow = row\n      } else {\n        studentList.push(row)\n      }\n    }\n\n    const sites = []\n    studentRow.slice(4).forEach((site) => {\n      sites.push(site.trim())\n    })\n\n    return this.formatStudents(studentList, sites)\n  }\n\n  formatStudents(studentList, sites) {\n    const formattedStudentList = []\n    studentList.forEach((raw_student) => {\n      const username = raw_student[1]\n      const firstName = raw_student[2]\n      const lastName = raw_student[3]\n      const siteRating = raw_student.slice(4)\n\n      const student = new Student(username, firstName, lastName, sites, siteRating)\n      formattedStudentList.push(student)\n    })\n    return formattedStudentList\n  }\n\n  parseSiteData() {\n    const siteList = []\n\n    for (let i = 0; i < this.rawSiteData.length; i++) {\n      const row = this.rawSiteData[i]\n      if (i > 0) {\n        if (row[0]) {\n          siteList.push(row)\n        } else {\n          break\n        }\n      }\n    }\n\n    return this.formatSiteList(siteList)\n  }\n\n  formatSiteList(siteList) {\n    const formattedSiteList = []\n    siteList.forEach((raw_site) => {\n      const name = raw_site[0]\n      const min_val = parseInt(raw_site[1])\n      const max_val = parseInt(raw_site[2])\n      const ideal = parseInt(raw_site[3])\n\n      const site = new Site(name, min_val, max_val, ideal)\n      formattedSiteList.push(site)\n    })\n\n    return formattedSiteList\n  }\n\n  run() {\n    const studentData = this.parseStudentData()\n    const siteData = this.parseSiteData()\n\n    let max_one = 0\n    this.best_match = null\n\n    for (let i = 0; i < 500; i++) {\n      const matcher = new StudentMatcher(studentData, siteData)\n      matcher.match()\n      const one_match = matcher.getTopFive()\n      console.log(one_match)\n      if (one_match > max_one) {\n        max_one = one_match\n        this.best_match = matcher\n      }\n\n    }\n\n    let summary = \"\"\n    summary += `Total Number of Sites: ${this.best_match.siteList.length}\\n`\n    summary += `Total Number of Students: ${this.best_match.studentList.length}\\n`\n    summary += \"Match Details: \\n\"\n    summary += this.best_match.getSummary()\n\n    document.getElementById(\"output\").textContent = summary\n  }\n\n  downloadStudentMatching() {\n    const file_name = 'output-student-matching.csv'\n\n    const rows = this.best_match.getDownloadRowsStudents()\n\n    let csvContent = \"data:text/csv;charset=utf-8,\" + rows.map(e => e.join(\",\")).join(\"\\n\");\n\n    var encodedUri = encodeURI(csvContent);\n    var link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", file_name);\n    document.body.appendChild(link); // Required for FF\n\n    link.click(); // This will download the data file named \"my_data.csv\".\n  }\n\n  downloadSiteDetails() {\n    const file_name = 'output-site-details.csv'\n\n    const rows = this.best_match.getDownloadRowsSites()\n\n    let csvContent = \"data:text/csv;charset=utf-8,\" + rows.map(e => e.join(\",\")).join(\"\\n\");\n\n    var encodedUri = encodeURI(csvContent);\n    var link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", file_name);\n    document.body.appendChild(link); // Required for FF\n\n    link.click(); // This will download the data file named \"my_data.csv\".\n  }\n}\n\nconst program = new Program()\n\nfunction readCsvFile(evt, onLoaded) {\n  const f = evt.target.files[0];\n  if (f) {\n    const r = new FileReader();\n    r.onload = function(e) {\n      const string = e.target.result;\n      const data = CSVToArray(string);\n      onLoaded(data)\n    }\n    r.readAsText(f);\n  }\n  onLoaded(null)\n}\ndocument.getElementById('student-input').addEventListener('change', (evt) => {\n  readCsvFile(evt, (data) => {\n    program.rawStudentData = data\n  })\n});\n\ndocument.getElementById('sites-input').addEventListener('change', (evt) => {\n   readCsvFile(evt, (data) => {\n     program.rawSiteData = data\n  })\n});\n\nconst downloadButtonStudents = document.getElementById(\"download-button-students\")\ndownloadButtonStudents.hidden = true\ndownloadButtonStudents.onclick = () => {\n  program.downloadStudentMatching()\n}\n\nconst downloadButtonSites = document.getElementById(\"download-button-sites\")\ndownloadButtonSites.hidden = true\ndownloadButtonSites.onclick = () => {\n  program.downloadSiteDetails()\n}\n\nconst runProgram = () => {\n  if (!program.rawSiteData || !program.rawStudentData) {\n    alert(\"Both files were not selected!\")\n    return\n  }\n  document.getElementById(\"output\").innerText = \"LOADING!\"\n  setTimeout(() => {\n    program.run()\n    downloadButtonStudents.hidden = false\n    downloadButtonSites.hidden = false\n  }, 0)\n\n}\n\ndocument.getElementById(\"generate-button\").onclick = runProgram\n"],"names":["$77ac944da51b7354$var$Site","constructor","name","min","max","ideal","this","trim","students","add_student","student","push","is_full","length","is_at_less_than_ideal","list_students_with_ranking","list","forEach","username","ranking_for_site","$77ac944da51b7354$var$Student","firstName","lastName","sites","siteRating","getSiteRatings","siteRatings","siteMatch","i","site","rating","parseInt","isNaN","sort","a","b","findSite","console","log","ranking","$77ac944da51b7354$var$StudentMatcher","studentData","siteData","studentList","siteList","siteNameToSite","details","random","match","j","Math","floor","$77ac944da51b7354$var$shuffle","studentsNotMatched","sitePicks","addedToSite","pick","siteName","i1","j1","student1","site1","getSummary","numOfStudentsMatched","studentsWithRanking","summary","keys","key","val","toFixed","numOfSitesNotAtMin","numOfSitesNotAtIdeal","getTopFive","total","getDownloadRowsStudents","rows","studentWithRanking","getDownloadRowsSites","$77ac944da51b7354$var$program","rawStudentData","rawSiteData","parseStudentData","studentRow","row","slice","formatStudents","formattedStudentList","raw_student","parseSiteData","formatSiteList","formattedSiteList","raw_site","min_val","max_val","run","max_one","best_match","matcher","one_match","document","getElementById","textContent","downloadStudentMatching","csvContent","map","e","join","encodedUri","encodeURI","link","createElement","setAttribute","body","appendChild","click","downloadSiteDetails","$77ac944da51b7354$var$readCsvFile","evt","onLoaded","f","target","files","r","FileReader","onload","data","delimiter","omitFirstRow","indexOf","split","v","$77ac944da51b7354$var$CSVToArray","result","readAsText","addEventListener","$77ac944da51b7354$var$downloadButtonStudents","hidden","onclick","$77ac944da51b7354$var$downloadButtonSites","innerText","setTimeout","alert"],"version":3,"file":"index.7b45cf9f.js.map"}