{"version":3,"sources":["js/main.js"],"names":["CSVToArray","data","delimiter","omitFirstRow","slice","indexOf","split","map","v","shuffle","a","i","length","j","Math","floor","random","Site","name","min","max","ideal","trim","students","student","push","list","forEach","username","ranking_for_site","Student","firstName","lastName","sites","siteRating","getSiteRatings","siteRatings","siteMatch","site","rating","parseInt","isNaN","sort","b","findSite","ranking","StudentMatcher","studentData","siteData","studentList","siteList","siteNameToSite","details","studentsNotMatched","sitePicks","addedToSite","pick","siteName","is_full","add_student","getSummary","numOfStudentsMatched","list_students_with_ranking","studentsWithRanking","summary","keys","key","val","toFixed","numOfSitesNotAtMin","numOfSitesNotAtIdeal","total","rows","studentWithRanking","Program","rawStudentData","rawSiteData","studentRow","row","formatStudents","formattedStudentList","raw_student","formatSiteList","formattedSiteList","raw_site","min_val","max_val","parseStudentData","parseSiteData","max_one","best_match","matcher","match","one_match","getTopFive","document","getElementById","textContent","csvContent","getDownloadRowsStudents","e","join","encodedUri","encodeURI","link","createElement","setAttribute","body","appendChild","click","getDownloadRowsSites","program","readCsvFile","evt","onLoaded","f","target","files","r","FileReader","onload","string","result","readAsText","addEventListener","downloadButtonStudents","hidden","onclick","downloadStudentMatching","downloadButtonSites","downloadSiteDetails","runProgram","innerText","setTimeout","run","alert"],"mappings":"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","file":"main.708b0b59.js","sourceRoot":"..","sourcesContent":["const CSVToArray = (data, delimiter = ',', omitFirstRow = false) =>\n  data\n    .slice(omitFirstRow ? data.indexOf('\\n') + 1 : 0)\n    .split('\\n')\n    .map(v => v.split(delimiter));\n\n/**\n * Shuffles array in place. ES6 version\n * @param {Array} a items An array containing the items.\n */\nfunction shuffle(a) {\n  for (let i = a.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [a[i], a[j]] = [a[j], a[i]];\n  }\n  return a;\n}\n\nclass Site {\n  constructor(name, min, max, ideal) {\n    this.name = name.trim();\n    this.min = min;\n    this.max = max;\n    this.ideal = ideal;\n    this.students = [];\n  }\n\n  add_student(student) {\n    this.students.push(student);\n  }\n\n  is_full() {\n    return this.students.length >= this.max;\n  }\n\n  is_at_less_than_ideal() {\n    return this.students.length < this.ideal;\n  }\n\n  list_students_with_ranking() {\n    const list = []\n    this.students.forEach((student) => {\n      list.push([student.username, student.ranking_for_site(this.name)])\n    })\n    return list\n  }\n\n}\n\n\nclass Student {\n\n  constructor(username, firstName, lastName, sites, siteRating) {\n    this.username = username\n    this.firstName = firstName\n    this.lastName = lastName\n    this.siteRating = this.getSiteRatings(sites, siteRating)\n  }\n\n  getSiteRatings(sites, siteRatings) {\n    const siteMatch = []\n    for (let i = 0; i < sites.length; i++) {\n      const site = sites[i]\n      if (site) {\n      let rating = parseInt(siteRatings[i])\n      if (isNaN(rating)) {\n        rating = 999\n      }\n      siteMatch.push([site, rating])\n      }\n    }\n\n    return siteMatch.sort((a,b) => {return a[1] - b[1]})\n  }\n\n  ranking_for_site(findSite) {\n    for (let i = 0; i < this.siteRating.length; i++) {\n      const siteRating = this.siteRating[i]\n      const site = siteRating[0]\n      const ranking = siteRating[1]\n      if (site === findSite) {\n        return ranking\n      }\n    }\n    return \"-1\"\n  }\n}\n\n\nclass StudentMatcher {\n  constructor(studentData, siteData) {\n    this.studentList = studentData\n    this.siteList = siteData\n    this.siteNameToSite = {}\n    this.siteList.forEach((site) => {\n      this.siteNameToSite[site.name] = site\n    })\n    this.details = {'random': 0}\n  }\n\n  match() {\n    shuffle(this.studentList)\n    const studentsNotMatched = []\n    for (let i = 0; i < this.studentList.length; i++) {\n      const student = this.studentList[i]\n      const sitePicks = student.siteRating\n      let addedToSite = false\n\n      for (let j = 0; j < sitePicks.length; j++) {\n        const pick = sitePicks[j]\n        const siteName = pick[0]\n        const ranking = pick[1]\n\n        if (!siteName) {\n          continue\n        }\n\n        const site = this.siteNameToSite[siteName]\n        if (!site.is_full()) {\n          site.add_student(student)\n          addedToSite = true\n          break\n        }\n      }\n\n      if (!addedToSite) {\n        studentsNotMatched.push(student)\n      }\n    }\n\n    for (let i = 0; i < studentsNotMatched.length; i++) {\n      for (let j = 0; j < this.siteList.length; j++) {\n        const student = studentsNotMatched[i]\n        const site = this.siteList[j]\n        if (!site.is_full()) {\n          site.add_student(student)\n          break\n        }\n      }\n    }\n\n    this.getSummary()\n  }\n\n  getSummary() {\n    let numOfStudentsMatched = 0\n    this.details = {'random': 0}\n    this.siteList.forEach((site) => {\n      site.list_students_with_ranking().forEach((studentsWithRanking) => {\n        const student = studentsWithRanking[0]\n        let ranking = studentsWithRanking[1]\n\n        numOfStudentsMatched += 1\n        if (ranking === '-1') {\n          ranking = \"random\"\n        } else if(ranking === 999) {\n          ranking = \"random\"\n        }\n\n        if (ranking in this.details) {\n          this.details[ranking] += 1\n        } else {\n          this.details[ranking] = 1\n        }\n      })\n    })\n\n    let summary = \"\"\n    const keys = []\n    for (let key in this.details) {\n      if (key !== \"random\") {\n        keys.push(parseInt(key))\n      }\n    }\n    keys.sort((a, b) => {\n      return a - b\n    })\n    keys.forEach((val) => {\n      summary += `% of Students with Ranking ${val}: ${(this.details[val] / this.studentList.length * 100).toFixed(2)} %\\n`\n    })\n    summary += `% of Students with Random Pick: ${(this.details[\"random\"] / this.studentList.length * 100).toFixed(2)} %\\n`\n    summary += `Total students matched: ${numOfStudentsMatched}\\n`\n\n    let numOfSitesNotAtMin = 0\n    this.siteList.forEach((site) => {\n      if (site.students.length < site.min) {\n        numOfSitesNotAtMin += 1\n      }\n    })\n    summary += `Number of Sites with less than min: ${numOfSitesNotAtMin}\\n`\n\n    let numOfSitesNotAtIdeal = 0\n    this.siteList.forEach((site) => {\n      if (site.students.length !== site.ideal) {\n        numOfSitesNotAtIdeal += 1\n      }\n    })\n    summary += `Number of Sites not at ideal: ${numOfSitesNotAtIdeal}\\n`\n    return summary\n  }\n\n  getTopFive() {\n    let total = 0\n    for (let i = 1; i < 6; i++) {\n      total += this.details[i]\n    }\n\n    this.siteList.forEach((site) => {\n      if (site.students.length < site.min) {\n        total = 0\n      }\n    })\n    return total\n  }\n\n  getDownloadRowsStudents() {\n    const rows = [\n      [\"Student\", 'Site', \"Student Ranking\"]\n    ];\n\n    this.siteList.forEach((site) => {\n      site.list_students_with_ranking().forEach((studentWithRanking) => {\n        const student = studentWithRanking[0]\n        const ranking = studentWithRanking[1]\n        rows.push([student, site.name, ranking + \"\"])\n      })\n    })\n    return rows\n  }\n\n  getDownloadRowsSites() {\n    const rows = [\n      [\"Site\", \"Number of Students\", \"Min\", \"Max\", \"Ideal\"]\n    ];\n\n    this.siteList.forEach((site) => {\n      rows.push([site.name, site.students.length, site.min, site.max, site.ideal])\n    })\n\n    return rows\n  }\n}\n\nclass Program {\n  constructor() {\n    this.rawStudentData = null\n    this.rawSiteData = null\n  }\n\n\n  parseStudentData() {\n    let studentRow = []\n    const studentList = []\n\n    for (let i = 0; i < this.rawStudentData.length; i++) {\n      const row = this.rawStudentData[i]\n      if (i === 0) {\n        studentRow = row\n      } else if (row[0]) {\n        studentList.push(row)\n      } else {\n        break\n      }\n    }\n\n    const sites = []\n    studentRow.slice(4).forEach((site) => {\n      sites.push(site.trim())\n    })\n\n    return this.formatStudents(studentList, sites)\n  }\n\n  formatStudents(studentList, sites) {\n    const formattedStudentList = []\n    studentList.forEach((raw_student) => {\n      const username = raw_student[1]\n      const firstName = raw_student[2]\n      const lastName = raw_student[3]\n      const siteRating = raw_student.slice(4)\n\n      const student = new Student(username, firstName, lastName, sites, siteRating)\n      formattedStudentList.push(student)\n    })\n    return formattedStudentList\n  }\n\n  parseSiteData() {\n    const siteList = []\n\n    for (let i = 0; i < this.rawSiteData.length; i++) {\n      const row = this.rawSiteData[i]\n      if (i > 0) {\n        if (row[0]) {\n          siteList.push(row)\n        } else {\n          break\n        }\n      }\n    }\n\n    return this.formatSiteList(siteList)\n  }\n\n  formatSiteList(siteList) {\n    const formattedSiteList = []\n    siteList.forEach((raw_site) => {\n      const name = raw_site[0]\n      const min_val = parseInt(raw_site[1])\n      const max_val = parseInt(raw_site[2])\n      const ideal = parseInt(raw_site[3])\n\n      const site = new Site(name, min_val, max_val, ideal)\n      formattedSiteList.push(site)\n    })\n\n    return formattedSiteList\n  }\n\n  run() {\n    const studentData = this.parseStudentData()\n    const siteData = this.parseSiteData()\n\n    let max_one = 0\n    this.best_match = null\n\n    for (let i = 0; i < 10000; i++) {\n      const matcher = new StudentMatcher(studentData, siteData)\n      matcher.match()\n      const one_match = matcher.getTopFive()\n      if (one_match > max_one) {\n        max_one = one_match\n        this.best_match = matcher\n      }\n\n    }\n\n    let summary = \"\"\n    summary += `Total Number of Sites: ${this.best_match.siteList.length}\\n`\n    summary += `Total Number of Students: ${this.best_match.studentList.length}\\n`\n    summary += \"Match Details: \\n\"\n    summary += this.best_match.getSummary()\n\n    document.getElementById(\"output\").textContent = summary\n  }\n\n  downloadStudentMatching() {\n    const file_name = 'output-student-matching.csv'\n\n    const rows = this.best_match.getDownloadRowsStudents()\n\n    let csvContent = \"data:text/csv;charset=utf-8,\" + rows.map(e => e.join(\",\")).join(\"\\n\");\n\n    var encodedUri = encodeURI(csvContent);\n    var link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", file_name);\n    document.body.appendChild(link); // Required for FF\n\n    link.click(); // This will download the data file named \"my_data.csv\".\n  }\n\n  downloadSiteDetails() {\n    const file_name = 'output-site-details.csv'\n\n    const rows = this.best_match.getDownloadRowsSites()\n\n    let csvContent = \"data:text/csv;charset=utf-8,\" + rows.map(e => e.join(\",\")).join(\"\\n\");\n\n    var encodedUri = encodeURI(csvContent);\n    var link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", file_name);\n    document.body.appendChild(link); // Required for FF\n\n    link.click(); // This will download the data file named \"my_data.csv\".\n  }\n}\n\nconst program = new Program()\n\nfunction readCsvFile(evt, onLoaded) {\n  const f = evt.target.files[0];\n  if (f) {\n    const r = new FileReader();\n    r.onload = function(e) {\n      const string = e.target.result;\n      const data = CSVToArray(string);\n      onLoaded(data)\n    }\n    r.readAsText(f);\n  }\n  onLoaded(null)\n}\ndocument.getElementById('student-input').addEventListener('change', (evt) => {\n  readCsvFile(evt, (data) => {\n    program.rawStudentData = data\n  })\n});\n\ndocument.getElementById('sites-input').addEventListener('change', (evt) => {\n   readCsvFile(evt, (data) => {\n     program.rawSiteData = data\n  })\n});\n\nconst downloadButtonStudents = document.getElementById(\"download-button-students\")\ndownloadButtonStudents.hidden = true\ndownloadButtonStudents.onclick = () => {\n  program.downloadStudentMatching()\n}\n\nconst downloadButtonSites = document.getElementById(\"download-button-sites\")\ndownloadButtonSites.hidden = true\ndownloadButtonSites.onclick = () => {\n  program.downloadSiteDetails()\n}\n\nconst runProgram = () => {\n  if (!program.rawSiteData || !program.rawStudentData) {\n    alert(\"Both files were not selected!\")\n    return\n  }\n  document.getElementById(\"output\").innerText = \"LOADING!\"\n  setTimeout(() => {\n    program.run()\n    downloadButtonStudents.hidden = false\n    downloadButtonSites.hidden = false\n  }, 0)\n\n}\n\ndocument.getElementById(\"generate-button\").onclick = runProgram\n"]}