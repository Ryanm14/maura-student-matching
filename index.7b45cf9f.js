class t{constructor(t,e,s,n){this.name=t.trim(),this.min=e,this.max=s,this.ideal=n,this.students=[]}add_student(t){this.students.push(t)}is_full(){return this.students.length>=this.max}is_at_less_than_ideal(){return this.students.length<this.ideal}list_students_with_ranking(){const t=[];return this.students.forEach((e=>{t.push([e.username,e.ranking_for_site(this.name)])})),t}}class e{constructor(t,e,s,n,i){this.username=t,this.firstName=e,this.lastName=s,this.siteRating=this.getSiteRatings(n,i)}getSiteRatings(t,e){const s=[];for(let n=0;n<t.length;n++){const i=t[n];let a=parseInt(e[n]);isNaN(a)&&(a=999),s.push([i,a])}return s.sort(((t,e)=>t[1]-e[1]))}ranking_for_site(t){console.log(this.siteRating,t);for(let e=0;e<this.siteRating.length;e++){const s=this.siteRating[e],n=s[0],i=s[1];if(n===t)return i}return"-1"}}class s{constructor(t,e){this.studentList=t,this.siteList=e,this.siteNameToSite={},this.siteList.forEach((t=>{this.siteNameToSite[t.name]=t})),this.details={random:0}}match(){!function(t){for(let e=t.length-1;e>0;e--){const s=Math.floor(Math.random()*(e+1));[t[e],t[s]]=[t[s],t[e]]}}(this.studentList);const t=[];for(let e=0;e<this.studentList.length;e++){const s=this.studentList[e],n=s.siteRating;let i=!1;for(let t=0;t<n.length;t++){const e=n[t],a=e[0],o=(e[1],this.siteNameToSite[a]);if(!o.is_full()){o.add_student(s),i=!0;break}}i||t.push(s)}for(let e=0;e<t.length;e++)for(let s=0;s<this.siteList.length;s++){const n=t[e],i=this.siteList[s];if(!i.is_full()){i.add_student(n);break}}this.getSummary()}getSummary(){let t=0;this.details={random:0},console.log(this),this.siteList.forEach((e=>{e.list_students_with_ranking().forEach((e=>{e[0];let s=e[1];console.log(s),t+=1,"-1"===s&&(s="random"),s in this.details?this.details[s]+=1:this.details[s]=1}))}));let e="";const s=[];for(let t in this.details)"random"!==t&&s.push(parseInt(t));s.sort(((t,e)=>t-e)),s.forEach((t=>{e+=`% of Students with Ranking ${t}: ${(this.details[t]/this.studentList.length*100).toFixed(2)} %\n`})),e+=`% of Students with Random Pick: ${(this.details.random/this.studentList.length*100).toFixed(2)} %\n`,e+=`Total students matched: ${t}\n`;let n=0;this.siteList.forEach((t=>{t.students.length<t.min&&(n+=1)})),e+=`Number of Sites with less than min: ${n}\n`;let i=0;return this.siteList.forEach((t=>{t.students.length!==t.ideal&&(i+=1)})),e+=`Number of Sites not at ideal: ${i}\n`,e}getTopFive(){let t=0;for(let e=1;e<6;e++)t+=this.details[e];return this.siteList.forEach((e=>{e.students.length<e.min&&(t=0)})),t}getDownloadRowsStudents(){const t=[["Student","Site","Student Ranking"]];return this.siteList.forEach((e=>{e.list_students_with_ranking().forEach((s=>{const n=s[0],i=s[1];t.push([n,e.name,i+""])}))})),t}getDownloadRowsSites(){const t=[["Site","Number of Students","Min","Max","Ideal"]];return this.siteList.forEach((e=>{t.push([e.name,e.students.length,e.min,e.max,e.ideal])})),t}}const n=new class{constructor(){this.rawStudentData=null,this.rawSiteData=null}parseStudentData(){let t=[];const e=[];for(let s=0;s<this.rawStudentData.length;s++){const n=this.rawStudentData[s];0===s?t=n:e.push(n)}const s=[];return t.slice(4).forEach((t=>{s.push(t.trim())})),this.formatStudents(e,s)}formatStudents(t,s){const n=[];return t.forEach((t=>{const i=t[1],a=t[2],o=t[3],h=t.slice(4),d=new e(i,a,o,s,h);n.push(d)})),n}parseSiteData(){const t=[];for(let e=0;e<this.rawSiteData.length;e++){const s=this.rawSiteData[e];if(e>0){if(!s[0])break;t.push(s)}}return this.formatSiteList(t)}formatSiteList(e){const s=[];return e.forEach((e=>{const n=e[0],i=parseInt(e[1]),a=parseInt(e[2]),o=parseInt(e[3]),h=new t(n,i,a,o);s.push(h)})),s}run(){const t=this.parseStudentData(),e=this.parseSiteData();let n=0;this.best_match=null;for(let i=0;i<500;i++){const i=new s(t,e);i.match();const a=i.getTopFive();console.log(a),a>n&&(n=a,this.best_match=i)}let i="";i+=`Total Number of Sites: ${this.best_match.siteList.length}\n`,i+=`Total Number of Students: ${this.best_match.studentList.length}\n`,i+="Match Details: \n",i+=this.best_match.getSummary(),document.getElementById("output").textContent=i}downloadStudentMatching(){let t="data:text/csv;charset=utf-8,"+this.best_match.getDownloadRowsStudents().map((t=>t.join(","))).join("\n");var e=encodeURI(t),s=document.createElement("a");s.setAttribute("href",e),s.setAttribute("download","output-student-matching.csv"),document.body.appendChild(s),s.click()}downloadSiteDetails(){let t="data:text/csv;charset=utf-8,"+this.best_match.getDownloadRowsSites().map((t=>t.join(","))).join("\n");var e=encodeURI(t),s=document.createElement("a");s.setAttribute("href",e),s.setAttribute("download","output-site-details.csv"),document.body.appendChild(s),s.click()}};function i(t,e){const s=t.target.files[0];if(s){const t=new FileReader;t.onload=function(t){const s=((t,e=",",s=!1)=>t.slice(s?t.indexOf("\n")+1:0).split("\n").map((t=>t.split(e))))(t.target.result);e(s)},t.readAsText(s)}e(null)}document.getElementById("student-input").addEventListener("change",(t=>{i(t,(t=>{n.rawStudentData=t}))})),document.getElementById("sites-input").addEventListener("change",(t=>{i(t,(t=>{n.rawSiteData=t}))}));const a=document.getElementById("download-button-students");a.hidden=!0,a.onclick=()=>{n.downloadStudentMatching()};const o=document.getElementById("download-button-sites");o.hidden=!0,o.onclick=()=>{n.downloadSiteDetails()};document.getElementById("generate-button").onclick=()=>{n.rawSiteData&&n.rawStudentData?(document.getElementById("output").innerText="LOADING!",setTimeout((()=>{n.run(),a.hidden=!1,o.hidden=!1}),0)):alert("Both files were not selected!")};
//# sourceMappingURL=index.7b45cf9f.js.map
